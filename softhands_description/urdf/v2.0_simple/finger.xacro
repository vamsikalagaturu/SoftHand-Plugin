<?xml version="1.0"?>
<!-- 
 *  Software License Agreement: BSD 3-Clause License
 *
 * Copyright (c) 2021, NMMI
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * \file      finger.xacro
 *
 * \author       _Centro di Ricerca "E.Piaggio"_
 * \author       _Istituto Italiano di Tecnologia, Soft Robotics for Human Cooperation and Rehabilitation Lab_
 *
-->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <xacro:macro name="finger_v2_simple" params="type ns sign position orientation translation damping useMimicTag abd_R inner_R middle_R outer_R">

    <!-- KNUCKLE -->
    <joint name="${ns}_${type}_knuckle_joint" type="revolute">
      <origin xyz="${position}" rpy="${orientation}"/>
      <parent link="${ns}_palm_link"/>
      <child link="${ns}_${type}_knuckle_link"/>
      <limit effort="30" velocity="1.0" lower="-0.1" upper="0.1"/>
      <dynamics damping="${damping}" friction="0.0" />
      <axis xyz="0 0 1" />
	  <xacro:if value="${useMimicTag}">
        <mimic joint="${ns}_synergy_joint" multiplier="${abd_R}" />
      </xacro:if>
    </joint> 
    
    
    <link name="${ns}_${type}_knuckle_link">
      <inertial>
	<origin xyz="0.001285644 0 0.000425011"/>
	<mass value="0.009"/>
	<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
      <xacro:if value="${type == 'index'}">
	<visual>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_r_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_r_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	  <material name="qbmove/default"/>
	</visual>
	<collision>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_r_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_r_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	</collision>
      </xacro:if>
      <xacro:if value="${type == 'middle'}">
	<visual>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_m_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_m_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	  <material name="qbmove/default"/>
	</visual>
	<collision>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_m_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_m_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if> 
	  </geometry>
	</collision>
      </xacro:if>
      <xacro:if value="${type == 'ring'}">
	<visual>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	  <material name="qbmove/default"/>
	</visual>
	<collision>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	</collision>
      </xacro:if>
      <xacro:if value="${type == 'little'}">
	<visual>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	  <material name="qbmove/default"/>
	</visual>
	<collision>
	  <geometry>
	    <xacro:if value="${ns == 'right_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	    <xacro:if value="${ns == 'left_hand_v2s'}">
	      <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_prossimal_std_l_ng.stl" scale="0.001 0.001 0.001"/> 
	    </xacro:if>
	  </geometry>
	</collision>
      </xacro:if>
    </link>
    
    <gazebo reference="${ns}_${type}_knuckle_link">
      <material>Gazebo/Grey</material>
      <!-- <selfCollide>true</selfCollide> -->
      <kp value="1e4" />
      <kd value="1e2" />
 		  <surface>
		   <friction>
		    <ode>
		     <mu>0.133</mu> 
		     <mu2>0.133</mu2>
		    </ode>
		   </friction>
		  </surface>
    </gazebo>
  
    <joint name="${ns}_${type}_proximal_joint" type="revolute">
      <xacro:if value="${type == 'index'}">
	<origin xyz="0.0211 0.0023 ${translation}" rpy="1.5707963 0 0"/>
      </xacro:if>
      <xacro:if value="${type == 'middle'}">
	<origin xyz="0.0211 0.0 ${translation}" rpy="1.5707963 0 0"/>
      </xacro:if>
      <xacro:if value="${type == 'ring'}">
	<origin xyz="0.0211 -0.0023 ${translation}" rpy="1.5707963 0 0"/>
      </xacro:if>
      <xacro:if value="${type == 'little'}">
	<origin xyz="0.0211 -0.0023 ${translation}" rpy="1.5707963 0 0"/>
      </xacro:if>
      <parent link="${ns}_${type}_knuckle_link"/>
      <child link="${ns}_${type}_proximal_link"/>
      <limit effort="30" velocity="1.0" lower="-0.785398" upper="1.57" />
      <dynamics damping="${damping}" friction="0.0" />
      <axis xyz="0 0 1" />
	  <xacro:if value="${useMimicTag}">
        <mimic joint="${ns}_synergy_joint" multiplier="${inner_R}" />
      </xacro:if>
    </joint>

      
     <link name="${ns}_${type}_proximal_link">
      <inertial>
        <origin xyz="0.011574337 -${translation} 0"/>
        <mass value="0.005"/>
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
      <visual>
	<geometry>
	  <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/phalanx_std_ng.stl" scale="0.001 0.001 0.001"/> 
	</geometry>
	<material name="qbmove/default"/>
	<origin xyz="0.0065 -${translation} 0" rpy="0 0 0"/>
      </visual>		
      <collision>
        <geometry>
          <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/phalanx_std_ng_collision.stl" scale="0.001 0.001 0.001"/> 
        </geometry>
        <origin xyz="0.0065 -${translation} 0" rpy="0 0 0"/>
      </collision>      
    </link>
    <gazebo reference="${ns}_${type}_proximal_link">
      <material>Gazebo/Grey</material>
      <!-- <selfCollide>true</selfCollide> -->
      <kp value="1e4" />
      <kd value="1e2" />
		  <surface>
		   <friction>
		    <ode>
		     <mu>0.133</mu> 
		     <mu2>0.133</mu2>
		    </ode>
		   </friction>
		  </surface>
    </gazebo>
  
    
    <joint name="${ns}_${type}_middle_joint" type="revolute">
      <origin xyz="0.022 0 0" rpy="0 0 0"/>
      <parent link="${ns}_${type}_proximal_link"/>
      <child link="${ns}_${type}_middle_link"/>
      <limit effort="30" velocity="1.0" lower="-0.785398" upper="1.57" />
      <dynamics damping="${damping}" friction="0.0" />
      <axis xyz="0 0 1" />
	  <xacro:if value="${useMimicTag}">
        <mimic joint="${ns}_synergy_joint" multiplier="${middle_R}" />
      </xacro:if>
    </joint>
    
    <link name="${ns}_${type}_middle_link">
      <inertial>
        <origin xyz="0.011574337 -${translation} 0"/>
        <mass value="0.005"/>
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
      <visual>
	<geometry>
	  <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/phalanx_std_ng.stl" scale="0.001 0.001 0.001"/> 
	</geometry>
	<material name="qbmove/default"/>
	<origin xyz="0.0065 -${translation} 0" rpy="0 0 0"/>
      </visual>		
      <collision>
        <geometry>
         <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/phalanx_std_ng_collision.stl" scale="0.001 0.001 0.001"/> 
        </geometry>
        <origin xyz="0.0065 -${translation} 0" rpy="0 0 0"/>
      </collision>        
    </link>
    <gazebo reference="${ns}_${type}_middle_link">
      <material>Gazebo/Grey</material>
      <!-- <selfCollide>true</selfCollide> -->
      <kp value="1e4" />
      <kd value="1e2" />
		  <surface>
		   <friction>
		    <ode>
		     <mu>0.133</mu> 
		     <mu2>0.133</mu2>
		    </ode>
		   </friction>
		  </surface>
    </gazebo>
  
    
    <joint name="${ns}_${type}_distal_joint" type="revolute">
      <origin xyz="0.022 0 0" rpy="0 0 0"/>
      <parent link="${ns}_${type}_middle_link"/>
      <child link="${ns}_${type}_distal_link"/>
      <limit effort="30" velocity="1.0" lower="-0.785398" upper="1.57" />
      <dynamics damping="${damping}" friction="0.0" />
      <axis xyz="0 0 1" />
	  <xacro:if value="${useMimicTag}">
        <mimic joint="${ns}_synergy_joint" multiplier="${outer_R}" />
      </xacro:if>
    </joint>
    
    <link name="${ns}_${type}_distal_link">
      <inertial>
        <origin xyz="0.011574337 -${translation} 0"/>
        <mass value="0.005"/>
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
      <visual>
	<geometry>
	  <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qb_distal_ng.stl" scale="0.001 0.001 0.001"/> 
	</geometry>
	<material name="qbmove/default"/>
	<origin xyz="0.0065 -${translation} 0" rpy="0 0 0"/>
      </visual>		
      <collision>
        <geometry>
          <mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qb_distal_ng.stl" scale="0.001 0.001 0.001"/> 
        </geometry>
        <origin xyz="0.0065 0 0" rpy="0 -${translation} 0"/>
      </collision>      
    </link>
    <gazebo reference="${ns}_${type}_distal_link">
      <material>Gazebo/Grey</material>
      <selfCollide>true</selfCollide>
      <kp value="1e4" />
      <kd value="1e2" />
		  <surface>
		   <friction>
		    <ode>
		     <mu>0.133</mu> 
		     <mu2>0.133</mu2>
		    </ode>
		   </friction>
		  </surface>
    </gazebo>
    
  </xacro:macro>

</robot>
    