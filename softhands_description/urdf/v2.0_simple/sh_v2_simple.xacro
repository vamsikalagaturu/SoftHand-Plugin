<?xml version="1.0"?>
<!-- 
 *  Software License Agreement: BSD 3-Clause License
 *
 * Copyright (c) 2021, NMMI
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * \file      sh_v2_simple.xacro
 *
 * \author       _Centro di Ricerca "E.Piaggio"_
 * \author       _Istituto Italiano di Tecnologia, Soft Robotics for Human Cooperation and Rehabilitation Lab_
 *
-->
<robot name="softhand_v2.0" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <xacro:include filename="$(find softhands_description)/urdf/v2.0_simple/finger.xacro"/>
  <xacro:include filename="$(find softhands_description)/urdf/v2.0_simple/thumb.xacro"/>

	<!-- from pisa-iit soft hand description -->
	<!-- pkg: pisa-iit-soft-hand/soft_hand_description/model/soft_hand.urdf.xacro -->

	<!-- joint properties -->
	<xacro:property name="abd_lb" value="-30" />
	<xacro:property name="abd_ub" value="30" />
	<xacro:property name="thumb_abd_lb" value="0" />
	<xacro:property name="thumb_abd_ub" value="90" />
	<xacro:property name="inner_lb" value="0" />
	<xacro:property name="inner_ub" value="45" />
	<xacro:property name="middle_lb" value="0" />
	<xacro:property name="middle_ub" value="45" />
	<xacro:property name="outer_lb" value="0" />
	<xacro:property name="outer_ub" value="45" />
	<xacro:property name="velocity" value="100" />
	<xacro:property name="effort" value="100" />
	<xacro:property name="damping" value="0.0" />
	<xacro:property name="friction" value="0.0" />

	<!-- synergy vector -->
	<xacro:property name="syn_amp" value="1" />
	<xacro:property name="thumb_abd_R" value="${1.3*syn_amp}" />
	<xacro:property name="thumb_inner_R" value="${1.3*syn_amp}" />
	<xacro:property name="thumb_outer_R" value="${1.0*syn_amp}" />
	<xacro:property name="index_abd_R" value="-${0.2*syn_amp}" />
	<xacro:property name="index_inner_R" value="${1.0*syn_amp}" />
	<xacro:property name="index_middle_R" value="${1.0*syn_amp}" />
	<xacro:property name="index_outer_R" value="${1.0*syn_amp}" />
	<xacro:property name="middle_abd_R" value="${0.0*syn_amp}" />
	<xacro:property name="middle_inner_R" value="${1.0*syn_amp}" />
	<xacro:property name="middle_middle_R" value="${1.0*syn_amp}" />
	<xacro:property name="middle_outer_R" value="${1.0*syn_amp}" />
	<xacro:property name="ring_abd_R" value="${0.2*syn_amp}" />
	<xacro:property name="ring_inner_R" value="${1.0*syn_amp}" />
	<xacro:property name="ring_middle_R" value="${1.0*syn_amp}" />
	<xacro:property name="ring_outer_R" value="${1.0*syn_amp}" />
	<xacro:property name="little_abd_R" value="${0.4*syn_amp}" />
	<xacro:property name="little_inner_R" value="${1.0*syn_amp}" />
	<xacro:property name="little_middle_R" value="${1.0*syn_amp}" />
	<xacro:property name="little_outer_R" value="${1.0*syn_amp}" />

  	<!-- conversions -->
    <xacro:property name="mm_to_m" value="0.001"/>
    <xacro:property name="mm2_to_m2" value="0.001"/>
    <xacro:property name="gr_to_Kg" value="0.01"/>

    <!-- not so negligible, otherwise simulation fails -->
    <xacro:property name="negligible_mass" value="${10*gr_to_Kg}"/>
    <xacro:property name="negligible_inertia">
        <origin xyz="0 0 0"/>
        <mass value="${negligible_mass}"/>
        <inertia ixx="${negligible_mass * 10 * mm2_to_m2}" ixy="0.0" ixz="0.0" iyy="${negligible_mass * 10 * mm2_to_m2}" iyz="0.0" izz="${negligible_mass * 10 * mm2_to_m2}"/>
    </xacro:property>

  	<!-- synergy joint properties -->
	<xacro:property name="synergy_lb" value="0.0" />
	<xacro:property name="synergy_ub" value="1.0"/>
	<xacro:property name="max_synergy_velocity" value="100000" />
	<xacro:property name="max_synergy_effort" value="100" />
	<xacro:property name="synergy_damping" value="0.0" />
	<xacro:property name="synergy_friction" value="0.0" />

  <xacro:macro name="sh_v2_simple" params="type parent position orientation operation_mode translation useMimicTag">

    # Softhand Base	
    <joint name="${type}_hand_v2s_base_joint" type="fixed">
	    <origin xyz="${position}" rpy="${orientation}"/>
	    <parent link="${parent}" />
	    <child link="${type}_hand_v2s_palm_base" />
    </joint>
    <link name="${type}_hand_v2s_palm_base">
    </link>


    # RIGHT HAND 
    <xacro:if value="${type == 'right'}">

      # Palm 
      <joint name="${type}_hand_v2s_palm_joint" type="fixed">
	      <origin xyz="0 0 0.00" rpy="0 -1.57 3.14159"/>
	      <parent link="${type}_hand_v2s_palm_base" />
	      <child link="${type}_hand_v2s_palm_link" />
      </joint>
    <link name="${type}_hand_v2s_palm_link">
		<inertial>
		<origin xyz="-0.004568758 -0.006808116 0.027653328"/>
		<mass value="0.266"/>
		<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
		</inertial>
		<visual>
		<geometry>
			<mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_palm_ng.stl" scale="0.001 0.001 0.001"/> 
		</geometry>
		<material name="qbmove/default"/>
		</visual>
		<collision>
		<geometry>
			<mesh filename="package://softhands_description/meshes/softhands/v2.0/right/qbh_palm_ng.stl" scale="0.001 0.001 0.001"/> 
		</geometry>
		</collision>       
    </link>
    <gazebo reference="${type}_hand_v2s_palm_link">
      <material>Gazebo/Grey</material>
      <selfCollide>true</selfCollide>
    </gazebo>
  

      # Thumb finger
      <xacro:thumb_v2_simple type="thumb" 
	      ns = "${type}_hand_v2s"
	      sign = "-1"
	      position="0.06643 -0.0437097 0.0210"
	      orientation="-1.5707963 -0.7 -1.0471972"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${thumb_abd_R *(thumb_abd_ub - thumb_abd_lb)*pi/180}" 
		  inner_R="${thumb_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  outer_R="${thumb_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}"> <!-- added offset on orientation -->
      </xacro:thumb_v2_simple>

      # Index finger
      <xacro:finger_v2_simple type="index" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.099 -0.0255 0.00766056"
	      orientation="0 0 -0.1745327"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${index_abd_R}" 
		  inner_R="${index_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${index_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${index_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

      # Middle finger
      <xacro:finger_v2_simple type="middle" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.104 -0.0075 0.00766056"
	      orientation="0.0 0.0 0.0"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${middle_abd_R}"
		  inner_R="${middle_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${middle_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${middle_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

      # Ring finger
      <xacro:finger_v2_simple type="ring" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.099 0.0105 0.00766056"
	      orientation="0 0 0.0872664"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${ring_abd_R}" 
		  inner_R="${ring_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${ring_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${ring_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>
	      
      # Little finger
      <xacro:finger_v2_simple type="little" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.094 0.0257 0.00766056"
	      orientation="0 0 0.2617993"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${little_abd_R}" 
		  inner_R="${little_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${little_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${little_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

    </xacro:if>
    
    # LEFT HAND 
    <xacro:if value="${type == 'left'}">

      # Palm 
      <joint name="${type}_hand_v2s_palm_joint" type="fixed">
	      <origin xyz="0 0 0.00" rpy="0 -1.57 3.14159"/>
	      <parent link="${type}_hand_v2s_palm_base" />
	      <child link="${type}_hand_v2s_palm_link" />
      </joint>
      <link name="${type}_hand_v2s_palm_link">
	<inertial>
	  <origin xyz="-0.004568758 -0.006808116 0.027653328"/>
	  <mass value="0.266"/>
	  <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
	</inertial>
	<visual>
	  <geometry>
	    <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_palm_ng.stl" scale="0.001 0.001 0.001"/> 
	  </geometry>
	  <material name="qbmove/default"/>
	</visual>
	<collision>
	  <geometry>
	    <mesh filename="package://softhands_description/meshes/softhands/v2.0/left/qbh_palm_ng.stl" scale="0.001 0.001 0.001"/> 
	  </geometry>
	</collision>       
      </link>
      <gazebo reference="${type}_hand_v2s_palm_link">
	<material>Gazebo/Grey</material>
	<selfCollide>true</selfCollide>
      </gazebo>
  
      # Thumb finger
      <xacro:thumb_v2_simple type="thumb" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.06643 0.0437097 0.0210"
	      orientation="1.5707963 0 1.0471971"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${thumb_abd_R *(thumb_abd_ub - thumb_abd_lb)*pi/180}" 
		  inner_R="${thumb_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  outer_R="${thumb_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:thumb_v2_simple>

      # Index finger
       <xacro:finger_v2_simple type="index" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.099 0.0255 0.00766056"
	      orientation="0 0 0.1745327"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${index_abd_R}" 
		  inner_R="${index_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${index_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${index_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

      # Middle finger
      <xacro:finger_v2_simple type="middle" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.104 0.0075 0.00766056"
	      orientation="0.0 0.0 0.0"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${middle_abd_R}"
		  inner_R="${middle_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${middle_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${middle_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

      # Ring finger
       <xacro:finger_v2_simple type="ring" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.099 -0.0105 0.00766056"
	      orientation="0 0 -0.0872667 "
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${ring_abd_R}" 
		  inner_R="${ring_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${ring_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${ring_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>
	      
      # Little finger
       <xacro:finger_v2_simple type="little" 
	      ns = "${type}_hand_v2s"
	      sign = "1"
	      position="0.094 -0.0257 0.00766056"
	      orientation="0 0 -0.2617993"
	      damping="0.05" 
		  useMimicTag="${useMimicTag}"
		  abd_R="${little_abd_R}" 
		  inner_R="${little_inner_R *(inner_ub - inner_lb)*pi/180}" 
		  middle_R="${little_middle_R *(middle_ub - middle_lb)*pi/180}" 
		  outer_R="${little_outer_R *(outer_ub - outer_lb)*pi/180}"
	      translation="${translation}">
      </xacro:finger_v2_simple>

    </xacro:if>

	<!-- synergy joint -->

	<joint name="${type}_hand_v2s_synergy_joint" type="revolute">
		<parent link="${type}_hand_v2s_palm_link"/>
		<child link="${type}_hand_v2s_synergy_link"/>
		<axis xyz="0 0 1"/>
		<limit lower="${synergy_lb}" upper="${synergy_ub}" effort="${max_synergy_effort}" velocity="${max_synergy_velocity}"/>
		<dynamics damping="${synergy_damping}" friction="${synergy_friction}"/>
	</joint>

	<link name="${type}_hand_v2s_synergy_link">
		<inertial>
			<xacro:insert_block name="negligible_inertia"/>
		</inertial>
	</link>

	  # Gazebo NEW custom synergy-plugin
	  <gazebo>
	          <plugin name="synergy_plugin" filename="libsofthand_plugin.so">
	                      <namespace>${type}_hand_v2s</namespace> 
	                      <operation_mode>${operation_mode}</operation_mode>

	                      <!-- Optional parameter to fit with the real EGO's arm -->
	                      <r_finger>0.0033</r_finger>
	                      <R_pulley>0.0053</R_pulley>
	                      <n_param>0.058</n_param> <!-- The formula is (4*r_finger)/(2*R_pulley) -->

	                      <spring_k>0.5</spring_k>

	                      <!-- Parameters for synergy matrix (S) -->
	                      <synS_thumb_j1>1.2</synS_thumb_j1>
	                      <synS_thumb_j2>1.2</synS_thumb_j2>
	                      <synS_thumb_j3>1.2</synS_thumb_j3>
	                      <k_thumb_j1>0.8</k_thumb_j1>
	                      <k_thumb_j2>0.8</k_thumb_j2>
	                      <k_thumb_j3>0.8</k_thumb_j3>

	                      <synS_index_j2>1.57</synS_index_j2>
	                      <synS_index_j3>1.25</synS_index_j3>
	                      <synS_index_j4>0.8</synS_index_j4>
	                      <k_index_j1>0.25</k_index_j1>
	                      <k_index_j2>0.5</k_index_j2>
	                      <k_index_j3>0.5</k_index_j3>
	                      <k_index_j4>0.5</k_index_j4>

	                      <synS_middle_j2>1.57</synS_middle_j2>
	                      <synS_middle_j3>1.25</synS_middle_j3>
	                      <synS_middle_j4>1.25</synS_middle_j4>
	                      <k_middle_j1>0.25</k_middle_j1>
	                      <k_middle_j2>0.5</k_middle_j2>
	                      <k_middle_j3>0.5</k_middle_j3>
	                      <k_middle_j4>0.5</k_middle_j4>

	                      <synS_ring_j2>1.57</synS_ring_j2>
	                      <synS_ring_j3>1.0</synS_ring_j3>
	                      <synS_ring_j4>1.0</synS_ring_j4>
	                      <k_ring_j1>0.25</k_ring_j1>
	                      <k_ring_j2>0.5</k_ring_j2>
	                      <k_ring_j3>0.5</k_ring_j3>
	                      <k_ring_j4>0.5</k_ring_j4>

	                      <synS_little_j2>1.57</synS_little_j2>
	                      <synS_little_j3>1.25</synS_little_j3>
	                      <synS_little_j4>1.0</synS_little_j4>
	                      <k_little_j1>0.25</k_little_j1>
	                      <k_little_j2>0.5</k_little_j2>
	                      <k_little_j3>0.5</k_little_j3>
	                      <k_little_j4>0.5</k_little_j4>

	                     	# Change tags sign according to the hand type
												<xacro:if value="${type == 'right'}">

														<synS_index_j1>0.3</synS_index_j1>
														<synS_middle_j1>0</synS_middle_j1>
														<synS_ring_j1>0</synS_ring_j1>
														<synS_little_j1>-0.2</synS_little_j1>

                      	</xacro:if>
												<xacro:if value="${type == 'left'}">

														<synS_index_j1>-0.3</synS_index_j1>
														<synS_middle_j1>0</synS_middle_j1>
														<synS_ring_j1>0</synS_ring_j1>
														<synS_little_j1>0.1</synS_little_j1>

                      	</xacro:if>
	          </plugin>
	  </gazebo>

  </xacro:macro>

</robot>